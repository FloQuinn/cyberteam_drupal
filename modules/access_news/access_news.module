<?php

use \Drupal\Core\Form\FormStateInterface;
use \Drupal\node\Entity\Node;
use \Drupal\user\Entity\User;

/**
 * Implements hook_form_alter().
 */
function access_news_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id == 'node_access_news_edit_form') {
    $form['#validate'][] = 'access_news_validate';
  }
}

/**
 * Custom validation callback.
 */
function access_news_validate(&$form, FormStateInterface $form_state) {
  // administrator can assign ACCESS News to any Affinity Group
  if (in_array('administrator', \Drupal::currentUser()->getRoles())) {
    return;
  }
  // Require that the person saving is an Affinity Group Coordinator
  // if an Affinity Group is selected for ACCESS News.
  $user = User::load(\Drupal::currentUser()->id());
  $ag_node_array = $form_state->getValue('field_affinity_group_node');
  // Valid values are arrays with non-null 'target-id' value
  foreach ($ag_node_array as $ag_node) {
    if (is_array($ag_node)) {
      $nid = $ag_node['target_id'];
      if ($nid) {
        $authorized = FALSE;
        $n = \Drupal\node\Entity\Node::load($nid);
        // Load coordinator(s) for the Affinity Group
        $coordinator_field = $n->get('field_coordinator');
        if ($coordinator_field) {
          $coordinators = $coordinator_field->getValue();
          foreach ($coordinators as $coordinator) {
            if ($coordinator['target_id'] == $user->get('uid')->value) {
              $authorized = TRUE;
            }
          }
        }
        // Check that the Affinity Group term exists
        $name = $n->get('title')->value;
        $vid = 'affinity-group';
        $term = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadByProperties(['name' => $name]);
        kint($term);
        if (!$term) {
          $form_state->setErrorByName('access_news', t('The Affinity Group taxonomy term ' . $name . ' does not exist. Please contact an administrator.'));
        }
      }
      if (!$authorized) {
        $form_state->setErrorByName('access_news', t('You are not a Coordinator for the ' . $n->get('title')->value . ' Affinity Group.'));
      }
      
    }
  }
}

/**
 * Implements hook_node_presave().
 */
function access_news_node_presave(Node $node) {
  $type = $node->bundle();
  if ( $type == 'access_news' ) {
    // Set Affinity Group taxonomy terms based on the Affinity Group node field
    $ag_node_array = $node->get('field_affinity_group_node');
    $node->set('field_affinity_group', NULL);
    foreach ($ag_node_array as $ag_node) {
      // Get the Affinity Group node
      $nid = $ag_node->getValue()['target_id'];
      $ag = \Drupal\node\Entity\Node::load($nid);
      $name = $ag->get('title')->value;
      // Get the term with the same name as the Affinity Group
      $vid = 'affinity-group';
      $term = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadByProperties(['name' => $name]);
      $node->get('field_affinity_group')->appendItem(array_key_first($term));
    }
  }
}

/**
 * Implements hook_theme().
 */
function access_news_theme($existing, $type, $theme, $path): array {
  return [
    'requestnews_block' => [
      'variables' => [
      ]
    ],
  ];
}