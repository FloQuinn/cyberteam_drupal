<?php
use Drupal\access_affinitygroup\Plugin\ConstantContactApi;
use Drupal\user\UserInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\user\Entity\User;
use Drupal\Component\Utility\Xss;
use Drupal\Component\Serialization\Json;

/**
 * @file
 * Module for affinity group.
 * 
 * Each affinity group (AG) has a dedicated "List" in Constant Contact, and
 * each user is a Constant Contact (CC) "Contact". 
 * We add a user to CC when the user logs in, if they don't already have a
 * constant contact id stored on the user form.  
 * When a user Joins or Leaves an AG, we add or remove the user from
 * the corresponding CC list.
 * When an AG is edited or created, we add the list to CC if not already done.
 * Each AG should have a 'list_id' item that was generated by CC.
 * Note: The list in Constant Contact is stored by the AG name, so relationship
 * to CC list is broken if AG name changes.
 */

/**
 * Implements hook_node_insert().
 * When AG is created, call CC api to create new email list.
 */
function access_affinitygroup_node_insert(EntityInterface $entity)
{
  $type = $entity->bundle();
  if ($type == 'affinity_group') {
    $get_fields = $entity->getFields();
    $title = $entity->getTitle();
    $summary = $get_fields['body']->summary;
    $post_data = [
      'name' => $title,
      'favorite' => 0,
      'description' => $summary
    ];
    $post_data = json_encode($post_data);
    // Create constant contact list for affinity group
    $created_list = $cca->apiCall('/contact_lists ', $post_data, 'POST');
    $list_id = Xss::filter($created_list->list_id);
    $entity->set('field_list_id', $list_id);
  }
}

/**
 * Implements hook_entity_presave(). 
 * Handles either
 * 1) User did Join on Affinity Group.  
 *    We call api to add user to corresponding email list.
 * 2) Admin user saved Affinity Group form  
 *    If the AG does not already have a list_id from CC,
 *    we call api to create the email list.
 * 
 * Join and Leave AG are implemented using a drupal Flag. Each AG
 * has a corresponding flag that can be set per-user, signifying 
 * whether the user belongs to the AG.   
 */
function access_affinitygroup_entity_presave(EntityInterface $entity)
{   
  $type = $entity->bundle();
  if ($type == 'affinity_group') {

    if (method_exists($entity, 'getFlaggableType')) {
      // user did Join the AG (using the Join button or link)
      // The entity id of this flag is used to find the AG node
      // which we need to build the JSON to send to api. 

      $entityId = $entity->get('entity_id')->getValue()[0]['value'];
      
      $postJSON = makeListMembershipJSON($entityId);

      if (empty($postJSON)) {                
        showStatus("Can't add user to email list; check if user is missing Constant Contact ID.");        
      } else {
        $cca = new ConstantContactApi;
        $ccResponse = $cca->apiCall('/activities/add_list_memberships', $postJSON, 'POST');
      }    

    } else {

      // affinity group edit was saved by admin user.
      // If not already there, add list to constant contact.
      // TODO - should we skip all this if list_id already set
      // instead of checking for list of lists from CC?

      // get all existing lists

      $cca = new ConstantContactApi;
      $lists = $cca->apiCall('/contact_lists ');
      if (empty($lists)) {
        return;
      }

      //debug info: here you can see all lists CC knows about along with their List IDs
      //kint($lists);
      $title = $entity->getTitle();
      $list_exists = false;
      foreach ($lists->lists as $list) {
        if ($list->name == $title) {
          $list_exists = true;
          break;
        }
      }
      // we didn't find an email list for this AG - make it now.
      if (!$list_exists) {
        $get_fields = $entity->getFields();
        $summary = $get_fields['body']->summary;
        // Api max is 255 characters.
        $summary = (strlen($summary) > 255) ? substr($summary, 0, 255) : $summary;
        $post_data = [
          'name' => $title,
          'favorite' => 0,
          'description' => $summary
        ];
        $post_data = json_encode($post_data);
      
        // Create Constant contact list named with AG title
        $created_list = $cca->apiCall('/contact_lists ', $post_data, 'POST');
        
        if (!empty($created_list)) {        
          $list_id = Xss::filter($created_list->list_id);
        }

        if (!empty($list_id)) {
            $entity->set('field_list_id', $list_id);
        } else {
            showStatus('Bad Constant Contact list id.');
        }
      }      
    }
  }
}

/**
 * Implements hook_entity_delete().
 * * Handles either
 * 1) User did Leave on Affinity Group
 *    Remove user from the email list.
 * 2) Admin deleted Affinity Group
 *    Delete the corresponding CC email list.
 * 
 * See notes above on presave for Join flag for Leave.
 */
// TODO - don't want to do this from CRON! Like when we are setting the user's AGs
function access_affinitygroup_entity_delete(\Drupal\Core\Entity\EntityInterface $entity)
{  
  $type = $entity->bundle();    
  if ($type == 'affinity_group') {
    
    if (method_exists($entity, 'getFlaggableType')) {     
     
      // user did Leave AG. This flag entity id is used to find the
      // AG node and the list id within the node for json to send to api. 
      
      $entityId = $entity->get('entity_id')->getValue()[0]['value'];
      //if ($entityId == 685) {
      //  testTheMail();
      //  return;        
      //}     
     
      $postJSON = makeListMembershipJSON($entityId, false);

      if (!empty($postJSON)) {      
        $cca = new ConstantContactApi;
        $ccResponse = $cca->apiCall('/activities/remove_list_memberships', $postJSON, 'POST');        
      }  

    } else {
      // AG getting deleted. 
      $title = $entity->getTitle();
      $cca = new ConstantContactApi;
      $lists = $cca->apiCall('/contact_lists');
      $list_exists = false;
      foreach ($lists->lists as $list) {
        if ($list->name == $title) {
          // Constant Contact contains affinity group
          // title in list.
          $list_id = $list->list_id;
          break;
        }
      }

      if (isset($list_id)) {
        $post_data = [
          'list_id' => $list_id
        ];
        $post_data = json_encode($post_data);
        $cca->apiCall("/contact_lists/$list_id", $list_id, 'DELETE');
      }
    }
  }
}

/**
 * Prepares json for api call that for adds or deletes CC user from 
 * a CC list.  The json contains 2 CC ids: the user (contact) and the
 * list id. 
 * Called from code where we have the entity id of the Join/Leave flag
 * corresponding to the Affinity Group. We use this entity id to find the
 * node (AG) containing the CC list id. 
 */

function makeListMembershipJSON($flagEntityId) 
{
  $current_user = \Drupal::currentUser();
  $user_id = $current_user->id();
        
  $user_detail = User::load($user_id);
  $user_cc_id = $user_detail->get('field_constant_contact_id')->getValue()[0]['value']; 

  if (empty($user_cc_id)) {
    return NULL;
  }

  // find the AG node that stores the entity Id of the flag; that
  // is the one and only AG that corresponds to this flag. 
  $query = \Drupal::entityQuery('node');
  $node_ids = $query
              ->condition('field_affinity_group', $flagEntityId)
              ->execute();
    
  $aval =  array_values($node_ids);
  $nid = $aval[0];

  $ag = \Drupal\node\Entity\Node::load($nid);  

  // finally we can get out the CC list id stored in the AG node.
  $fieldVal = $ag->get('field_list_id')->getValue();
  if (!empty($fieldVal)) {   
    $list_cc_id = $fieldVal[0]['value'];;
  }
    
  if (empty($list_cc_id)) {
    showStatus('Missing Constant Contact List Id for this Affinity Group.');
    return NULL;
  }

  $post_data = [
    'source' => [
      'contact_ids' => [$user_cc_id]
    ],
    'list_ids' =>  [$list_cc_id]
  ];
  $post_data = json_encode($post_data);
  return $post_data;
}

/**
 * Implements hook_user_login().
 * Add user to Constant Contact if we don't have a CC ID stored yet.
 */

function  access_affinitygroup_user_login(UserInterface $account)
{
  $current_user = \Drupal::currentUser();

  $user_id = $current_user->id();
  $user_detail = User::load($user_id);

  $cca_user_id = null;
  $field_val = $user_detail->get('field_constant_contact_id')->getValue();
  if (!empty($field_val)) {
    $cca_user_id = $field_val[0]['value'];    
  }

  // if user did not already have the CC id, try to add to CC.
  if (empty($cca_user_id)) {

    $user_first_name = $user_detail->get('field_user_first_name')->getString();
    $user_last_name = $user_detail->get('field_user_last_name')->getString();
    $user_mail = $current_user->getEmail();
    
    $cca = new ConstantContactApi;
    $cca_user_id = $cca->addContact($user_first_name, $user_last_name, $user_mail, $user_id);
    
    if (empty($cca_user_id)) {
      showStatus("Could not add user to Constant Contact.");
    }else {
      $user_detail->set('field_constant_contact_id', $cca_user_id);
      $user_detail->save();
    }
  } else {
    // this else just for debugging in early stages
    //showStatus("Login and NOT attempting add of new constant contact id.");
  }

}

function showStatus($logmsg)
{  
  \Drupal::messenger()->addStatus($logmsg);
}    

/**
 * Implements hook_cron().
 * Refreshes the authorization. If not run, token expires and we'll get
 * 'not authorized' return code from api calls.
 */
function access_affinitygroup_cron()
{  
  // Refresh the Constant Constact Token
  // Set to run Once a day. Todo: store last run + compare
  if ((date('G', time()) == 01) && (date('i', time()) >= 0) && (date('i', time()) <= 30)) {
    $cca = new ConstantContactApi;
    $cca->newToken();
  }
  //showStatus ("IN AAG CHRON 2");
  //updateUserAllocations();
}

// api call to 
// run from chron 
// ciderName: this is the "Global Resource Id" (from CiDeR), aka "info_resource_id" from xdusage api aka "allocation"
//            Example: anvil-gpu.perdue.xsede.org
// ciderRefNum: the entity number/ the interal id for the entity of type Access ACtive Resrouces from CiDeR
//            Example: '429'
// variable names beginning with "xd" have to do with the info incoming from the api.

function updateUserAllocations() {
    
    $apiBase = 'https://a3mdev.xsede.org/xdcdb-api-test-new/xdusage';
    //$requestUrl = $apiBase . '/v2/projects?active_only&not_expired&person_id=5723';    
    $requestUrl = $apiBase . '/v2/projects?active_only&not_expired&resource_id=3000';    
    //$requestUrl = $apiBase . '/v2/projects?active_only&not_expired';
  
//    $path = 'sites/default/files/private/.keys/secrets.json';
//    if (!file_exists($path)) {
//      \Drupal::messenger()->addError("[User Profiles] Unable to get ramps api key");
//      return false;
//    }
//    $secrets_json_text = file_get_contents($path);
//    $secrets_data = json_decode($secrets_json_text, TRUE);
//    $api_key = $secrets_data['ramps_api_key'];
    $apiKey = '';
     //TODO - get from file

    $requestOpts = array('headers' => array(
                        'XA-API-KEY' => $apiKey,
                        'XA-AGENT'   => 'xdusage',
                        'XA-RESOURCE' => 'support.access-ci.org', 
                        'Content-Type' => 'application/json'),    
                       'curl' => [CURLOPT_SSLVERSION => CURL_SSLVERSION_TLSv1]);
      
    $client = new GuzzleHttp\Client();
    try {
      $response = $client->request('GET', $requestUrl, $requestOpts);
      //kint($response);
      
      $responseJson = Json::decode((string) $response->getBody());
      
     // kint($responseJson['message']);

      // check each project. this may not be the right api call, not sure yet. for now 
      // try it with this. (if it is, get unique users first)
      $xdProjectsArray = $responseJson['result'];
      kint('!!!incoming count: ' .count($xdProjectsArray));

      $xdAllocations = array();
        // assemble array of users and which resources (allocations) they use, discarding duplicates
      foreach ($xdProjectsArray as $xdProject) {

        $xdUserName = $xdProject['pi_portal_username'];
        showStatus('* '.$xdUserName);

        //$xdOneUser = array_search($xdUserName, $xdAllocations);  
        if (array_key_exists($xdUserName, $xdAllocations))  {          
          // have user. add this rid if they don't already have in their list 
          //kint('.............found, appending rid:'. $xdUserName .'- '. $xdProject['info_resource_id']);                    
          if (array_search($xdProject['info_resource_id'], $xdAllocations[$xdUserName]) === false) {                      
            array_push($xdAllocations[$xdUserName], $xdProject['info_resource_id']);
          }
        } else {
          //kint('-- not found; adding '. $xdUserName);                    
          $xdAllocations[$xdUserName] = array($xdProject['info_resource_id']);           
        }
      }  

      kint($xdAllocations);
      //showStatus('count: '.count($xdAllocations));

      // for each user: if user does not exist, create the user. First look for the user via the user name.
      // the name would have @access_id on the end [IS THIS right?]

      // now we have a user handle, whether newly created or existing. 
      // for each rid, find related AG. Make sure user is part of that AG. 
      
      // after creating, and if we do have the user. find which resource they are part of 

      foreach ($xdAllocations as $xdUserName => $xdUserCiderNames) {
        kint($xdUserName);
        kint($xdUserCiderNames);
        
        try {

        $accessUserName = $xdUserName.'@access-ci.org';
        $userDetails = user_load_by_name($accessUserName);
        kint('**** ' . $accessUserName);
        kint($userDetails);
        
        // @access-ci.org
        // did not have the user, so create it. Ongoing, this is much the less frequent case
        // so instead of storing everyone's account info in $users, go back to incoming to find user's info in one of their projects
        // TODO - is there a better way to do this
        if ($userDetails === false) {
          
          kint("CREATING new user...");
          $xdOneUsersProjects = array_usearch($xdProjectsArray, function ($o) use ($xdUserName) { return $o['pi_portal_username'] === $xdUserName; });
          $xdOneUsersProjects = reset($xdOneUsersProjects); // get just first one
          kint($xdOneUsersProjects);
      
          // TODO - might have to make another api call here to get the email if needed... yes it is needed,  for constant contact AG of course
          $userDetails = createUser($xdOneUsersProjects);  // change this to take varbs needed individually - more clear        
        }
        
        // !!(todo - Should really make a lookup table for all cider grid=>entityIds)
        // map the  incoming resource names for this user to array of the internal reference numbers
        // for comparison with those in the users
        $xdCiderRefnums= array();
        foreach ($xdUserCiderNames as $ciderName) {
          
          // get a list of the corresponding entity ids for the incoming
          // this can be used to compare to the existing
          // TODO - should this be case-sensitive or not
          
          $query = \Drupal::entityQuery('node');
          $refnum = $query
           ->condition('type', 'access_active_resources_from_cid')
          ->condition('field_access_global_resource_id', $ciderName)
          ->execute(); 

          if (empty($refnum)) {
              \Drupal::messenger()->addError("Incoming global resource id not found in CiDeR active resources: $ciderName ");      
          } else {
            array_push($xdCiderRefnums, reset($refnum));
          }        
        }
        kint($xdCiderRefnums);

        // now we have a loaded userDetails whether existing or newly created. Check the user's Resources to see if they still match.
        // now from list of resource_id for this user, check each to see which AG they are associated with. build list of AGs for this user        
        $userCiderRefnums = array();
        $userCiderArray = $userDetails->get('field_cider_resources')->getValue();
        foreach ($userCiderArray as $userCider) {          
                  //array_push($userCiderRefnums, $userCider['target_id']);
          $userCiderRefnums[] =  $userCider['target_id'];
        }
        //        kint($userCiderArray);                
                kint($userCiderRefnums);
        
                // get current record of user's allocations, and make a list of the internal entity numbers (CiderRefNum coresponding to allocation cider name)  stored on the user record
                // don't need this I think...
                $userCiderNames = array();
                $refEntArray = $userDetails->get('field_cider_resources')->referencedEntities();
                foreach ($refEntArray as $refEnt) {          
                  $ciderName = $refEnt->get('field_access_global_resource_id')->getValue()[0];        
                  array_push($userCiderNames, $ciderName);          
                }
                kint($userCiderNames);
        
        // is xd incoming list different from what user already has? if not, reset the user list
        $intersect = array_intersect(array_values($xdCiderRefnums), $userCiderRefnums);
        if (count($intersect) !== count($xdCiderRefnums)) {
          $xx = "----YES updating user ciders. count new: ".count($xdCiderRefnums). " was ". count($userCiderRefnums);
          kint($xx);
          updateUserCiderList($userDetails, $xdCiderRefnums);
        } else {
          kint("-----not updating user ciders -count: ".count($intersect));
        }
        
        // finally, check for AG membership in each AG corresponding to the ciderrefnum
        // TODO - should we only do this if list has changed? 
        
        // gather a list of associated affinity groups (unique)
        // The Cider Refs might be associated with multiples AGs, 
        // and an AG has 0 to many Cider Refs
        if (false) { // TEMP. this does work
        $agNodes = array();
        foreach ($xdCiderRefnums as $refnum) {
      
          $query = \Drupal::entityQuery('node');              
          $agNodeIds = $query
            ->condition('type', 'affinity_group')
            ->condition('field_cider_resources', $refnum)
            ->execute();  

            foreach ($agNodeIds as $id) {
                if (!in_array($id, $agNodes)) {
                  $agNodes[] = $id;
                }
            }            
        }
        kint($agNodes);

        $nid = reset($agNodes);  // temp - first entry.  Look for all of them.
        // Join this Affinity Group for this user.
        setUserMembership($nid, $userDetails, true);        
        kint("done with set membership");
        
        } // end if temp
        } catch (Exception $e) {
          kint($e->getMessage());
          \Drupal::messenger()->addError("exception for incoming user $xdUserName  " .  $e->getMessage());                    
        }
      } // end foreach xdAllocation (each api user and their with allocations)   

    } catch (Exception $e) {
      \Drupal::messenger()->addError("exception" .  $e->getMessage());
    }
  die();
  return false;
}
// user membership for an affinity group is stored in a per-user flag (not global) on the ag. 
// pass in taxonomy node for the ag 
function setUserMembership($agNid, $userDetails, $isJoin) {
  // TODO - check user list for any blockAutoMembership (we add this blocked if they leave the group, and remove if they
  // manually join the ag again)

  $ag = \Drupal\node\Entity\Node::load($agNid);        
  $agTax = \Drupal::entityTypeManager()
    ->getStorage('taxonomy_term')
    ->loadByProperties(['name' => ($ag->get('title')->value)]);
  $agTax = reset($agTax);

  //$termId = reset($term)->id();
  $flagService = \Drupal::service('flag');
  $flag = $flagService->getFlagById('affinity_group'); // replace by flag machine name

  // check if already flagged
  $flagging = $flagService->getFlagging($flag, $agTax, $userDetails);  
  kint($flagging);  

  if ($isJoin) {
    $flagService->flag($flag, $agTax, $userDetails);
  } else {
    $flagService->unflag($flag, $agTax, $userDetails);
  }
}
/**
 * Reset user's cider list 
*/
function updateUserCiderList($userDetails, $ciderRefnums) {  
  
  $userDetails->set('field_cider_resources', NULL);
  foreach ($ciderRefnums as $refnum) {       
    $userDetails->get('field_cider_resources')->appendItem($refnum);    
  }
  $userDetails->save();
}
 
function array_usearch(array $array, callable $comparitor) {
  return array_filter(
      $array,
      function ($element) use ($comparitor) {
          if ($comparitor($element)) {
              return $element;
          }
      }
  );
}
function createUser($userProject) { 
  try {      
    $u = User::create();
    kint('user create');
    //kint($u);
    $u->set('status', 1);
//    $u->setEmail($userProject['ben@example.com');
    $u->setUsername($userProject['pi_portal_username'].'@access-ci.org');
    //$user->addRole('content_editor');
    $u->set('field_user_first_name', $userProject['pi_first_name']);
    $u->set('field_user_last_name', $userProject['pi_last_name']);
    //kint($userProject['pi_last_name']);
    $u->save();
    $status = true;
    } catch (Exception $e) {
      \Drupal::messenger()->addError("exception " .  $e->getMessage());
      $u = false;
    }
    return $u;
}

/**
  * Email emailText to each AG email group in ccListIds array.
  * Subject of email is emailTitle.
  * See makeNewsHTML for meaning of other arguments. 
  *    
  * Steps to send email campaign from Constant Contact:
  * Setup:
  * - Make a POST request to create an email campaign and campaign activities.
  * - Make a GET request to retrieve the primary_email email campaign activity.
  * Send:
  * - Make a PUT request to update the email campaign activity and add recipients.
  * - Make a POST request to schedule the email campaign activity.
 */

 // last 2 args are arrays
function emailToAffinityGroups($emailText, $emailTitle, $pubDate, $agNames, $newsUrl, $ccListIds) {
  
  $emailHtml = makeNewsHTML($emailText, $emailTitle, $pubDate, $agNames, $newsUrl);
  $ccResponse = setupEmailCampaign($emailTitle, $emailHtml);
 
  if (!empty($ccResponse)) {
    $campaignId = $ccResponse->campaign_id;
    $campaignActivityId = $ccResponse->campaign_activities[0]->campaign_activity_id;
   
    sendEmailCampaign($campaignId, $campaignActivityId, $ccListIds);
  }
}
/**
 * Create the Constant Contact email campaign, which is the initial setup. 
 * Nothing is sent at this point. Returns the response which included the 
 * campaign id and campaign activity id needed for step leading to send.
 */
function setupEmailCampaign($emailSubject, $emailHtml) {

  //$emailHtml = "<html><body>[[trackingImage]]".$emailText."</body></html>"; // basic

  // for CC, must be unique name for campaign
  $campaignName = uniqid('Access-news', true);

  $postData = [
    'name' => $campaignName,
    'email_campaign_activities' => [
      [
      'format_type' => 5,
      'from_name'=> 'Access Support',           //TODO
      'from_email'=> 'ingmann33@gmail.com',     //TODO
      'reply_to_email'=> 'ingmann33@gmail.com', //TODO
      'subject'=> $emailSubject,
      'preheader'=> $emailSubject,
      'html_content' => $emailHtml
      ]
    ]    
  ];

  // note: could include addr in postData if we want to change, but don't have to as cc uses addr on record for footer addres in email

  $postData = json_encode($postData);
  $cca = new ConstantContactApi;
  $ccResponse = $cca->apiCall('/emails', $postData, 'POST');

  return $ccResponse;
}

/**
 * Take the campaign and campaign activity ids from the campaign setup api call, 
 * set up the recipient lists, and finally, schedule for immediate sendoff.
 * ccListIds: array of CC email List Ids, one for each AG 
 */

function sendEmailCampaign($campaignId, $campaignActivityId, $ccListIds) 
{
  // first, get the activity object 
  $sent = false;
  $cca = new ConstantContactApi;
  $ccActivity = $cca->apiCall("/emails/activities/$campaignActivityId");

  if (!empty($ccActivity)) {
    
    // update activity obj with the destination cc email lists in 
    // an array with list_id from each AG group to receive news

    // test: tinaDestTest CC list;
    //$agListId = '23223746-48c4-11ed-a81f-fa163e52f1a1'; 
    //$ccActivity->contact_list_ids = array($agListId);      

    $ccActivity->contact_list_ids = $ccListIds;      
    
    $ccActivity = json_encode($ccActivity);
    $ccResponse = $cca->apiCall("/emails/activities/$campaignActivityId", $ccActivity, 'PUT');

    if (!empty($ccResponse)) {
      // finally, send it, scheduled with 0 signifying: now.  
      $schedule = array('scheduled_date'=>'0');  
      $schedule = json_encode($schedule);
      // TODO. comment this actual in/out for now since I have limited free test email sends
      //$ccResponse = $cca->apiCall("/emails/activities/$campaignActivityId/schedules", $schedule, 'POST');
      $sent = true;
    }   
  }
  if ($sent) {
    showStatus("News item emailed to specified affinity groups.");
  } else {
    showStatus("Error while trying to email news items to affinity groups.");
  }
}
/**
 * returns the HTML to send to Constant Contact
 * This functions like an email template. CC does not have API for email templates. 
 * 
 * newsBody: the html for the main part of the message
 * newsTitle: line at the top
 * pubDate: date string to be used with [published: xxxx]
 * agNames: list of Affinity Group names for the 'You are receiving this email through...' 
 * newsUrl: link for 'View on website' button 
 */
// todo: we will probably have to change the url of the access logo image when we close our test accounts

function makeNewsHTML($newsBody, $newsTitle, $pubDate, $agNames, $newsUrl) {

  // build list of one or more affinity group names separated by 'or'
  $agText = '';
  $or = '';
  foreach ($agNames as $agName) {
    $agText = $agText.$or.$agName;
    $or = ' or ';
  }
  $agText = 'You are receiving this email through the '.$agText.' Affinity Group.';
  
  // HTML with values for newsBody, newsTitle, pubdate and agText inserted

  $emailText = <<<EMAILTEXT
  <html>
<body>[[trackingImage]]
    <div id="yiv2621404860">
        <style type="text/css">
            @media only screen and (max-width:480px) {
                #yiv2621404860 .yiv2621404860footer-main-width {
                    width: 100% !important;
                }

                #yiv2621404860 .yiv2621404860footer-mobile-hidden {
                    display: none !important;
                }

                #yiv2621404860 .yiv2621404860footer-mobile-hidden {
                    display: none !important;
                }

                #yiv2621404860 .yiv2621404860footer-column {
                    display: block !important;
                }

                #yiv2621404860 .yiv2621404860footer-mobile-stack {
                    display: block !important;
                }

                #yiv2621404860 .yiv2621404860footer-mobile-stack-padding {
                    padding-top: 3px;
                }
            }

            #yiv2621404860 #yiv2621404860 img {}

            #yiv2621404860 .yiv2621404860layout {
                min-width: 100%;
            }

            #yiv2621404860 table {
                table-layout: fixed;
            }

            #yiv2621404860 .yiv2621404860shell_outer-row {
                table-layout: auto;
            }

            #yiv2621404860 #yiv2621404860 u+.yiv2621404860body .yiv2621404860shell_outer-row {
                width: 700px;
            }

            #yiv2621404860 #yiv2621404860 .yiv2621404860text .yiv2621404860text_content-cell p {
                margin: 0;
                padding: 0;
                margin-bottom: 0;
            }

            #yiv2621404860 .yiv2621404860text .yiv2621404860text_content-cell ul,
            #yiv2621404860 .yiv2621404860text .yiv2621404860text_content-cell ol {
                padding: 0;
                margin: 0 0 0 40px;
            }

            #yiv2621404860 .yiv2621404860text .yiv2621404860text_content-cell li {
                padding: 0;
                margin: 0;
            }

            #yiv2621404860 #yiv2621404860 a {
                text-decoration: underline;
            }

            #yiv2621404860 #yiv2621404860 a .filtered99999 {
                text-decoration: underline !important;
                font-size: inherit !important;
                font-family: inherit !important;
                font-weight: inherit !important;
                line-height: inherit !important;
                color: inherit !important;
            }

            #yiv2621404860 #yiv2621404860 .yiv2621404860text .yiv2621404860text_content-cell {}
        </style>
        <style>
            @media only screen and (max-width:480px) {
                #yiv2621404860 .yiv2621404860button_content-cell {
                    padding-top: 10px !important;
                    padding-right: 20px !important;
                    padding-bottom: 10px !important;
                    padding-left: 20px !important;
                }

                #yiv2621404860 .yiv2621404860button_border-row .yiv2621404860button_content-cell {
                    padding-top: 10px !important;
                    padding-right: 20px !important;
                    padding-bottom: 10px !important;
                    padding-left: 20px !important;
                }

                #yiv2621404860 .yiv2621404860column .yiv2621404860content-padding-horizontal {
                    padding-left: 20px !important;
                    padding-right: 20px !important;
                }

                #yiv2621404860 .yiv2621404860layout .yiv2621404860column .yiv2621404860content-padding-horizontal .yiv2621404860content-padding-horizontal {
                    padding-left: 0px !important;
                    padding-right: 0px !important;
                }

                #yiv2621404860 .yiv2621404860layout .yiv2621404860column .yiv2621404860content-padding-horizontal .yiv2621404860block-wrapper_border-row .yiv2621404860content-padding-horizontal {
                    padding-left: 20px !important;
                    padding-right: 20px !important;
                }

                #yiv2621404860 .yiv2621404860dataTable {
                    overflow: auto !important;
                }

                #yiv2621404860 .yiv2621404860dataTable .yiv2621404860dataTable_content {
                    width: auto !important;
                }

                #yiv2621404860 .yiv2621404860image--mobile-scale .yiv2621404860image_container img {
                    width: auto !important;
                }

                #yiv2621404860 .yiv2621404860image--mobile-center .yiv2621404860image_container img {
                    margin-left: auto !important;
                    margin-right: auto !important;
                }

                #yiv2621404860 .yiv2621404860layout-margin .yiv2621404860layout-margin_cell {
                    padding: 0px 20px !important;
                }

                #yiv2621404860 .yiv2621404860layout-margin--uniform .yiv2621404860layout-margin_cell {
                    padding: 20px 20px !important;
                }

                #yiv2621404860 .yiv2621404860scale {
                    width: 100% !important;
                    height: auto !important;
                }

                #yiv2621404860 .yiv2621404860stack {
                    display: block !important;
                }

                #yiv2621404860 .yiv2621404860hide {
                    display: none !important;
                }

                #yiv2621404860 u+.yiv2621404860body .yiv2621404860shell_outer-row {
                    width: 100% !important;
                }

                #yiv2621404860 .yiv2621404860socialFollow_container {
                    text-align: center !important;
                }

                #yiv2621404860 .yiv2621404860text .yiv2621404860text_content-cell {
                    font-size: 16px !important;
                }

                #yiv2621404860 .yiv2621404860text .yiv2621404860text_content-cell h1 {
                    font-size: 24px !important;
                }

                #yiv2621404860 .yiv2621404860text .yiv2621404860text_content-cell h2 {
                    font-size: 20px !important;
                }

                #yiv2621404860 .yiv2621404860text .yiv2621404860text_content-cell h3 {
                    font-size: 20px !important;
                }

                #yiv2621404860 .yiv2621404860text--sectionHeading .yiv2621404860text_content-cell {
                    font-size: 24px !important;
                }

                #yiv2621404860 .yiv2621404860text--heading .yiv2621404860text_content-cell {
                    font-size: 24px !important;
                }

                #yiv2621404860 .yiv2621404860text--dataTable .yiv2621404860text_content-cell .yiv2621404860dataTable .yiv2621404860dataTable_content-cell {
                    font-size: 14px !important;
                }

                #yiv2621404860 .yiv2621404860text--dataTable .yiv2621404860text_content-cell .yiv2621404860dataTable th.yiv2621404860dataTable_content-cell {}
            }
        </style>
        <div>
            
            <div lang="en-US" style="background-color:#138597;" class="yiv2621404860shell">
                <table width="100%" border="0" cellpadding="0" cellspacing="0" style="background-color:#138597;"
                    bgcolor="#138597" class="yiv2621404860shell_panel-row">
                    <tbody>
                        <tr>
                            <td style="" align="center" valign="top" class="yiv2621404860shell_panel-cell">
                                <table style="width:700px;" align="center" border="0" cellpadding="0" cellspacing="0"
                                    class="yiv2621404860shell_width-row yiv2621404860scale">
                                    <tbody>
                                        <tr>
                                            <td style="padding:15px 10px;" align="center" valign="top"
                                                class="yiv2621404860shell_width-cell">
                                                <table width="100%" align="center" border="0" cellpadding="0"
                                                    cellspacing="0" class="yiv2621404860shell_content-row">
                                                    <tbody>
                                                        <tr>
                                                            <td style="background-color:#ffffff;padding:0;"
                                                                align="center" valign="top" bgcolor="#ffffff"
                                                                class="yiv2621404860shell_content-cell">
                                                                <table
                                                                    style="background-color:#1a5b6e;table-layout:fixed;"
                                                                    width="100%" border="0" cellpadding="0"
                                                                    cellspacing="0" bgcolor="#1a5b6e"
                                                                    class="yiv2621404860layout yiv2621404860layout--1-column">
                                                                    <tbody>
                                                                        <tr>
                                                                            <td style="width:100%;" align="center"
                                                                                valign="top"
                                                                                class="yiv2621404860column yiv2621404860column--1 yiv2621404860scale yiv2621404860stack">
                                                                                
                                                                                <table width="100%" border="0"
                                                                                    cellpadding="0" cellspacing="0"
                                                                                    style="table-layout:fixed;"
                                                                                    class="yiv2621404860text yiv2621404860text--padding-vertical">
                                                                                    <tbody>
                                                                                        <tr>
                                                                                            <td style="text-align:left;font-family:Arial, Verdana, Helvetica, sans-serif;color:#3E3E3E;font-size:14px;line-height:1.2;display:block;word-wrap:break-word;padding:10px 40px;"
                                                                                                align="left"
                                                                                                valign="top"
                                                                                                class="yiv2621404860text_content-cell yiv2621404860content-padding-horizontal">
                                                                                                <p style="margin:0;">
                                                                                                    <span style="color:rgb(255, 255, 255);">
                                                                                                      $agText
                                                                                                    </span>
                                                                                                </p>
                                                                                            </td>
                                                                                        </tr>
                                                                                    </tbody>
                                                                                </table>
                                                                            </td>
                                                                        </tr>
                                                                    </tbody>
                                                                </table>
                                                                <table style="table-layout:fixed;" width="100%"
                                                                    border="0" cellpadding="0" cellspacing="0"
                                                                    class="yiv2621404860layout yiv2621404860layout--1-column">
                                                                    <tbody>
                                                                        <tr>
                                                                            <td style="width:100%;" align="center"
                                                                                valign="top"
                                                                                class="yiv2621404860column yiv2621404860column--1 yiv2621404860scale yiv2621404860stack">
                                                                                <div style="line-height:30px;min-height:30px;"
                                                                                    class="yiv2621404860spacer"> </div>
                                                                            </td>
                                                                        </tr>
                                                                    </tbody>
                                                                </table>
                                                                <table style="table-layout:fixed;" width="100%"
                                                                    border="0" cellpadding="0" cellspacing="0"
                                                                    class="yiv2621404860layout yiv2621404860layout--1-column">
                                                                    <tbody>
                                                                        <tr>
                                                                            <td style="width:100%;" align="center"
                                                                                valign="top"
                                                                                class="yiv2621404860column yiv2621404860column--1 yiv2621404860scale yiv2621404860stack">
                                                                                <table width="100%" border="0"
                                                                                    cellpadding="0" cellspacing="0"
                                                                                    class="yiv2621404860image yiv2621404860image--padding-vertical yiv2621404860image--mobile-scale yiv2621404860image--mobile-center">
                                                                                    <tbody>
                                                                                        <tr>
                                                                                            <td align="left"
                                                                                                valign="top"
                                                                                                style="padding:10px 40px;"
                                                                                                class="yiv2621404860image_container yiv2621404860content-padding-horizontal">
                                                                                                <img width="240"
                                                                                                    src="https://ecp.yusercontent.com/mail?url=https%3A%2F%2Ffiles.constantcontact.com%2F611b8b84901%2F3769f037-6aeb-4d73-baae-408c17803a76.jpg%3Frdr%3Dtrue&amp;t=1666141473&amp;ymreqid=e44e9186-6cc5-04bd-1ceb-710003012600&amp;sig=tCKknf09uZ.wgIRKOMIdqw--~D"
                                                                                                    alt=""
                                                                                                    style="display:block;height:auto;max-width:100%;"
                                                                                                    class="yiv2621404860image_content">
                                                                                            </td>
                                                                                        </tr>
                                                                                    </tbody>
                                                                                </table>
                                                                                <div style="line-height:10px;min-height:10px;"
                                                                                    class="yiv2621404860spacer"> </div>
                                                                                <table width="100%" border="0"
                                                                                    cellpadding="0" cellspacing="0"
                                                                                    style="table-layout:fixed;"
                                                                                    class="yiv2621404860text yiv2621404860text--padding-vertical">
                                                                                    <tbody>
                                                                                        <tr>
                                                                                            <td style="text-align:left;font-family:Arial, Verdana, Helvetica, sans-serif;color:#3E3E3E;font-size:14px;line-height:1.2;display:block;word-wrap:break-word;padding:10px 40px;"
                                                                                                align="left"
                                                                                                valign="top"
                                                                                                class="yiv2621404860text_content-cell yiv2621404860content-padding-horizontal">
                                                                                                <p style="margin:0;">
                                                                                                    <span style="font-size:16px;font-weight:bold;color:rgb(26, 91, 110);">
                                                                                                    $newsTitle
                                                                                                    </span>
                                                                                                </p>
                                                                                            </td>
                                                                                        </tr>
                                                                                    </tbody>
                                                                                </table>
                                                                                <table width="100%" border="0"
                                                                                    cellpadding="0" cellspacing="0"
                                                                                    style="table-layout:fixed;"
                                                                                    class="yiv2621404860text yiv2621404860text--padding-vertical">
                                                                                    <tbody>
                                                                                        <tr>
                                                                                            <td style="text-align:left;font-family:Arial, Verdana, Helvetica, sans-serif;color:#3E3E3E;font-size:14px;line-height:1.2;display:block;word-wrap:break-word;padding:10px 40px;"
                                                                                                align="left"
                                                                                                valign="top"
                                                                                                class="yiv2621404860text_content-cell yiv2621404860content-padding-horizontal">
                                                                                                <p style="margin:0;">
                                                                                                    [Published Date: $pubDate]
                                                                                                </p>
                                                                                            </td>
                                                                                        </tr>
                                                                                    </tbody>
                                                                                </table>                                                                                
                                                                                <table width="100%" border="0"
                                                                                    cellpadding="0" cellspacing="0"
                                                                                    style="table-layout:fixed;"
                                                                                    class="yiv2621404860text yiv2621404860text--padding-vertical">
                                                                                    <tbody>
                                                                                        <tr>
                                                                                            <td style="text-align:left;font-family:Arial, Verdana, Helvetica, sans-serif;color:#3E3E3E;font-size:14px;line-height:1.2;display:block;word-wrap:break-word;padding:10px 40px;"
                                                                                                align="left"
                                                                                                valign="top"
                                                                                                class="yiv2621404860text_content-cell yiv2621404860content-padding-horizontal">
                                                                                                $newsBody
                                                                                            </td>
                                                                                        </tr>
                                                                                    </tbody>
                                                                                </table>
                                                                                
                                                                                <div style="line-height:20px;min-height:20px;"
                                                                                    class="yiv2621404860spacer"> </div>
                                                                                <table width="100%" border="0"
                                                                                    cellpadding="0" cellspacing="0"
                                                                                    style="table-layout:fixed;"
                                                                                    class="yiv2621404860button yiv2621404860button--padding-vertical">
                                                                                    <tbody>
                                                                                        <tr>
                                                                                            <td align="left"
                                                                                                style="padding:10px 40px;"
                                                                                                class="yiv2621404860button_container yiv2621404860content-padding-horizontal">
                                                                                                <table
                                                                                                    style="background-color:#ffc42d;width:inherit;border-radius:2px;border-spacing:0;border:none;"
                                                                                                    border="0"
                                                                                                    cellpadding="0"
                                                                                                    cellspacing="0"
                                                                                                    bgcolor="#ffc42d"
                                                                                                    class="yiv2621404860button_content-row">
                                                                                                    <tbody>
                                                                                                        <tr>
                                                                                                            <td style="padding:10px 15px;"
                                                                                                                align="center"
                                                                                                                class="yiv2621404860button_content-cell">
                                                                                                                <a href="$newsUrl"
                                                                                                                    rel="nofollow noopener noreferrer"
                                                                                                                    style="color:#000000;font-family:Arial, Verdana, Helvetica, sans-serif;font-size:16px;word-wrap:break-word;font-weight:bold;text-decoration:none;"
                                                                                                                    class="yiv2621404860button_link">
                                                                                                                    VIEW ON WEBSITE
                                                                                                                </a>
                                                                                                            </td>
                                                                                                        </tr>
                                                                                                    </tbody>
                                                                                                </table>
                                                                                            </td>
                                                                                        </tr>
                                                                                    </tbody>
                                                                                </table>
                                                                                <div style="min-height:30px;line-height:30px;"
                                                                                    class="yiv2621404860spacer"> </div>
                                                                            </td>
                                                                        </tr>
                                                                    </tbody>
                                                                </table>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>            
        </div>
    </div>
</body>
</html>
EMAILTEXT;
// note: EMAILTEXT must be to the left column-wise of the last tag (php)

return $emailText;
}
