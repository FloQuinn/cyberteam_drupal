// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.209.6/containers/debian
{
	"name": "Debian",
	"build": {
		"dockerfile": "Dockerfile",
		// Update 'VARIANT' to pick an Debian version: bullseye, buster, stretch
		// Use bullseye or stretch on local arm64/Apple Silicon.
		"args": { "VARIANT": "bullseye" }
	},

	// Set *default* container specific settings.json values on container create.
	"settings": {},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"tsega.drupal-8-javascript-snippets",
		"dssiqueira.drupal-8-snippets",
		"tsega.drupal-8-twig-snippets",
		"johnpapa.winteriscoming",
		"ikappas.composer",
		"ms-azuretools.vscode-docker",
		"DmitryDorofeev.empty-indent",
		"Tyriar.lorem-ipsum",
		"eg2.vscode-npm-script",
		"xdebug.php-debug",
		"neilbrayfield.php-docblocker",
		"bmewburn.vscode-intelephense-client",
		"persoderlind.vscode-phpcbf",
		"ikappas.phpcs",
		"mechatroner.rainbow-csv",
		"mblode.twig-language-2",
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode",
	"features": {
		"docker-in-docker": "latest",
    		"lando/lando-dev-container-feature/landodevcontainer": "latest",
	},

	"postCreateCommand": "cd /workspaces/cyberteam_drupal && ./.devcontainer/codespaces.sh"
}